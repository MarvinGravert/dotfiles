[user]
	name = Marvin Gravert
	email = marvin.gravert@gmail.com
[includeIf "gitdir:~/reposWork/"]
    path = ~/reposWork/.gitconfig
[core]
	editor = code --wait
[merge]
	tool = code
[mergetool "vscode"]
    cmd = code --wait $MERGED
# https://medium.com/faun/using-vscode-as-git-mergetool-and-difftool-2e241123abe7
[diff]
    tool = vscode
[difftool "vscode"]
    cmd = code --wait --diff "$LOCAL\" "$REMOTE\"
[pretty]
    pretty-history = format:%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset
[alias]
	cl = clone

	co = commit
	
	ch = checkout
	
	b = branch
	#show all branches remote and local
	ba = branch -a
	#delete a branch (must be fully merged)
	bd = branch -d 
	#force deletion
	bdd = branch -d -f 
	
	undo = reset --soft --keep HEAD^
	unstage = reset HEAD
    	##git reset --soft HEAD^ undo last commit, old files are ready to commit now
    	##mixed is default, like --soft but have to readded before commiting
	############
	re = reset
	rh = reset HEAD^
	reh = reset --hard
	rem = reset --mixed
	res = reset --soft
	rehh = reset --hard HEAD
	remh = reset --mixed HEAD
	resh = reset --soft HEAD
	rehom = reset --hard origin/master
	
	# deletes all merged branches locally. Excludes all branches containing master, master or dev
    	# cleanup = "!git branch --merged | egrep -v "(^\*|master|main|dev)" | xargs -n 1 -r git branch -d"
    	cleanup = "!git branch --merged | grep  -v '\\*\\|master\\|develop' | xargs -n 1 -r git branch -d"

	lg = lg1
    lg1 = lg1-specific --all
    lg2 = lg2-specific --all
    lg3 = lg3-specific --all

    lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
    lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
	count-lines = "! git log --author=\"$1\" --pretty=tformat: --numstat | awk '{ add += $1; subs += $2; loc += $1 - $2 } END { printf \"added lines: %s, removed lines: %s, total lines: %s\\n\", add, subs, loc }' #"
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true